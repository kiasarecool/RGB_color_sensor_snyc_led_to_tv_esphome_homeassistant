############################################################
# Copy and paste this into your HA config/automations.yaml #
# If your esp_name is not 'color_sensor' you must change   #
# entity id's accordingly - sensor.[CHANGE]_blue_channel   #
############################################################
- id: color_sensor_led_set
description: ""
trigger:
  - platform: state
    entity_id:
      - sensor.color_sensor_blue_channel
      - sensor.color_sensor_red_channel
      - sensor.color_sensor_green_channel
      - sensor.color_sensor_clear_channel
      - sensor.color_sensor_illuminance
      - sensor.color_sensor_color_temperature
condition: []
action:
  - service: light.turn_on
    data_template:
      rgbw_color:
        - "{{states(\"sensor.color_sensor_green_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_red_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_blue_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_clear_channel\") | int / 100 * 255 }}"
    target:
      entity_id:
        - light.neopixel
        - light.plant_room_neopixel
    enabled: true
  - service: light.turn_on
    data_template:
      rgb_color:
        - "{{states(\"sensor.color_sensor_red_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_green_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_blue_channel\") | int / 100 * 255 }}"
    target:
      entity_id:
        - light.bulb_1
    enabled: true
  - service: light.turn_on
    data_template:
      rgbw_color:
        - "{{states(\"sensor.color_sensor_red_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_green_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_blue_channel\") | int / 100 * 255 }}"
        - "{{states(\"sensor.color_sensor_clear_channel\") | int / 100 * 255 }}"
    target:
      entity_id:
        - light.wled_5
        - light.tv_side_light
    enabled: true
mode: single
